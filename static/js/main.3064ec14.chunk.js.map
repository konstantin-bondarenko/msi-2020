{"version":3,"sources":["Containers/MainScreen/MainScreen.module.css","Components/JokeBox/JokeBox.module.css","Components/Favorite/Favorite.module.css","Components/SideDrawer/SideDrawer.module.css","Components/SideDrawer/DrawerToggle/drawerToggle.module.css","UI/Backdrop/Backdrop.module.css","UI/Category/Category.module.css","UI/Backdrop/Backdrop.js","Components/Favorite/Favorite.js","Components/SideDrawer/DrawerToggle/drawerToggle.js","Components/SideDrawer/SideDrawer.js","Components/JokeBox/JokeBox.js","UI/Category/Category.js","Containers/MainScreen/MainScreen.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backdrop","props","show","className","classes","Backdrop","onClick","clicked","Favorite","temp","map","item","date","Math","floor","Date","now","updated_at","getTime","key","id","Heart","delete","FavoriteContent","Icon","FavoriteJoke","Link","href","url","LinkIcon","FJoke","value","Update","drawerToggle","DrawerToggle","Left","Right","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","closed","join","Toggle","JokeBox","heart","data","filter","like","length","push","Liked","useEffect","obj","console","log","Container","getLike","Content","ContainerJoke","Joke","categories","category","Category","type","name","htmlFor","MainScreen","state","path","search","popup","showSideDrawer","getJokeHandler","setState","fetch","then","res","json","getFetch","onInputChange","e","target","onInputChangeCategory","query","this","getCategoriesFetch","localStorage","getItem","JSON","stringify","parse","response","result","fetchData","keyword","arr","includes","toLowerCase","getSearchFetch","renderElement","likeHandler","slice","SearchInput","placeholder","onChange","onSearchInputChange","Btns","index","Main","Screen","Header","ToggleFavourite","style","fontWeight","Inputs","defaultChecked","InputsLabel","Search","Buttons","Btn","deleteHandler","Component","Layout","items","setItem","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3064ec14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"MainScreen_Main__14pCk\",\"Header\":\"MainScreen_Header__2v-0s\",\"ToggleFavourite\":\"MainScreen_ToggleFavourite__2K7zs\",\"Screen\":\"MainScreen_Screen__1Tsj6\",\"Inputs\":\"MainScreen_Inputs__2ZwqL\",\"InputsLabel\":\"MainScreen_InputsLabel__3GRpR\",\"Btn\":\"MainScreen_Btn__3bVbG\",\"Btns\":\"MainScreen_Btns__1BHMm\",\"Search\":\"MainScreen_Search__2k47v\",\"SearchInput\":\"MainScreen_SearchInput__399s4\",\"Buttons\":\"MainScreen_Buttons__1oElP\",\"Favorite\":\"MainScreen_Favorite__dYuwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"JokeBox_Container__2k_2k\",\"Heart\":\"JokeBox_Heart__1dv1n\",\"Liked\":\"JokeBox_Liked__3pErB\",\"LinkIcon\":\"JokeBox_LinkIcon__2nt2J\",\"Icon\":\"JokeBox_Icon__3ZsvK\",\"Content\":\"JokeBox_Content__3Vgi3\",\"ContainerJoke\":\"JokeBox_ContainerJoke__1bhT3\",\"Joke\":\"JokeBox_Joke__3E5bj\",\"Link\":\"JokeBox_Link__bfiJX\",\"Update\":\"JokeBox_Update__3KIHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favorite\":\"Favorite_Favorite__15PcQ\",\"FavoriteContent\":\"Favorite_FavoriteContent__3wPft\",\"FavoriteJoke\":\"Favorite_FavoriteJoke__mxfMC\",\"FJoke\":\"Favorite_FJoke__1PkY-\",\"Heart\":\"Favorite_Heart__3oXQr\",\"Icon\":\"Favorite_Icon__2_0rN\",\"LinkIcon\":\"Favorite_LinkIcon__1u0sa\",\"Link\":\"Favorite_Link__1QWTM\",\"Update\":\"Favorite_Update__2RBNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2tmxU\",\"Toggle\":\"SideDrawer_Toggle__eAIh_\",\"Open\":\"SideDrawer_Open__2vP2M\",\"Closed\":\"SideDrawer_Closed__1Ynug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"drawerToggle_DrawerToggle__2sXb3\",\"Left\":\"drawerToggle_Left__G7yp1\",\"Right\":\"drawerToggle_Right__2034j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"Category_Category__1A_cZ\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport classes from '../Favorite/Favorite.module.css';\n\nconst Favorite = props => {\n    return (<>\n        {props.temp.map(item=>{\n            const date = Math.floor((((Date.now() - new Date(item.updated_at).getTime())/1000)/60)/60)\n            return (\n                <div className={classes.Favorite} key={item.id}>\n                    <div className={classes.Heart} onClick={()=>props.delete(item.id)}></div>\n                    <div className={classes.FavoriteContent}>\n                        <div className={classes.Icon}></div>\n                        <div className={classes.FavoriteJoke}>\n                            <div className={classes.Link}>ID: <a href={item.url}>{item.id}<div className={classes.LinkIcon}></div></a></div>\n                            <div className={classes.FJoke}>{item.value}</div>\n                            <div className={classes.Update}>\n                            <span>Last update: {date} hours ago</span>\n                            </div>\n                        </div>\n                    </div>\n              </div>\n            )\n        })}\n        </>\n        )\n}\n\nexport default Favorite;","import React from 'react';\n\nimport classes from './drawerToggle.module.css';\n\nconst drawerToggle = (props) => {\n\n    return (<div\n        className={classes.DrawerToggle} \n        onClick={props.clicked}>\n            {props.show ? \n            <>\n            <div className={classes.Left}></div>\n            <div className={classes.Right}></div>\n            </>\n             : \n            <>\n            <div></div>\n            <div></div>\n            </>}\n    </div>)\n}\n\nexport default drawerToggle","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Favorite from '../Favorite/Favorite';\nimport DrawerToggle from './DrawerToggle/drawerToggle';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Closed]\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n    return (\n        <>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Toggle}>\n                    <DrawerToggle clicked={props.clicked} show={props.open} />\n                    <span>Favourite</span>\n                </div>\n                <Favorite temp={props.temp} delete={props.delete} />\n            </div>\n        </>\n    )\n}\n\nexport default sideDrawer;","import React, { useEffect } from 'react';\n\nimport classes from './JokeBox.module.css';\n\nconst JokeBox = (props) =>{\n    const heart = [classes.Heart]\n    let obj = props.data.filter(item => item.like)\n    if(obj.length){\n        heart.push(classes.Liked)\n    }\n    useEffect(()=>{\n        let obj = props.data.filter(item => item.like)\n        console.log('JokeBox, props.data.value: ', obj)\n    }, [props.data])\n    return (<>\n    {props.data.map(item => {\n            const date = Math.floor((((Date.now() - new Date(item.updated_at).getTime())/1000)/60)/60)\n            return (\n                <div className={classes.Container} key={item.id}>\n                    <div className={heart.join(' ')} onClick={()=>props.getLike(item.id, item)}></div>\n                    <div className={classes.Content}>\n                        <div className={classes.Icon}></div>\n                        <div className={classes.ContainerJoke}>\n                            <div className={classes.Link}>ID: <a href={item.url}>{item.id}<div className={classes.LinkIcon}></div></a></div>\n                            <div className={classes.Joke}>{item.value}</div>\n                            <div className={classes.Update}>\n                                <span>Last update: {date} hours ago</span>\n                                <button>{item.categories.length ? item.categories : 'random'}</button>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n            )\n            })\n        }\n    </>\n    )\n}\n\nexport default JokeBox;\n","import React from 'react';\n\nimport classes from './Category.module.css';\n\nconst category = (props) => {\n    return (\n        <div className={classes.Category}>\n            <input type=\"radio\" id={props.name} name=\"categories\" value={props.name} />\n            <label htmlFor={props.name}>{props.name}</label>\n        </div>\n    )\n}\n\nexport default category;","import React, { Component } from 'react';\n\nimport JokeBox from '../../Components/JokeBox/JokeBox';\nimport Favorite from '../../Components/Favorite/Favorite';\nimport DrawerToggle from '../../Components/SideDrawer/DrawerToggle/drawerToggle';\nimport Category from '../../UI/Category/Category';\nimport classes from './MainScreen.module.css';\n\n\nclass MainScreen extends Component {\n    state = {\n        data: [],\n        temp: [],\n        category: [],\n        like: false,\n        url: 'https://api.chucknorris.io/jokes/',\n        path: 'random',\n        search: false,\n        categories: false,\n        popup: false,\n        showSideDrawer: false\n    }\n\n    // FETCHING DATA\n\n    componentDidMount(){\n        this.getFetch()\n        this.getCategoriesFetch()\n        const temp = localStorage.getItem('favorites') || JSON.stringify([])\n        this.setState({temp: JSON.parse(temp)})\n    }\n\n    getFetch(){\n        fetch(this.state.url + this.state.path)\n        .then(response => response.json())\n        .then(result => {\n            console.log('Fetchdata: ',result)\n            this.setState({\n            data: [{...result, like: false}]\n            }, ()=>console.log('data after like',this.state.data))\n        })\n    }\n\n    getCategoriesFetch(){\n        fetch(this.state.url + 'categories')\n        .then(response => response.json())\n        .then(response => {\n            return this.setState({category: response})})\n    }\n\n    // FETCHING DATA BUTTON\n\n    getJokeHandler = () => {\n        if(this.state.search) this.setState({like: false, popup: false, search: false, data: [], path: 'random'}, ()=>{\n            fetch(this.state.url + 'random').then(res=>res.json()).then(res=>this.setState({data: [{...res}]}))\n        })\n        else this.setState({like: false}, this.getFetch())\n    }\n\n    // CHOOSE CATEGORIES OF JOKE\n\n    onInputChange = (e) => {\n        switch(e.target.value){\n            case('random'):\n                return this.setState({ path: e.target.value, search: false, categories: false})\n            case('categories'):\n                return this.setState({ categories: true, search: false})\n            case('search'):\n                return this.setState({ search: true, categories: false})\n            default: \n                return this.state.path\n        }\n    }\n\n    onInputChangeCategory = (e) => {\n        let query = e.target.value;\n        return this.setState({ path: `random?category=${query}`}, ()=>{\n            fetch(this.state.url + `random?category=${query}`).then(res=>res.json()).then(res=>this.setState({data: [{...res}]}))\n            })\n    }\n\n    // SEARCHING JOKE BY VALUE\n\n    getSearchFetch(){\n        fetch(this.state.url + this.state.path)\n            .then(response => response.json())\n            .then(response => {\n                const fetchData = this.state.data\n                for(let key in response.result){\n                    fetchData.push({\n                        ...response.result[key],\n                    })\n                }\n                this.setState({data: fetchData})\n            })\n    }\n    onSearchInputChange(e) {\n        const keyword = e.target.value\n        if (keyword.length > 3){\n            let arr = this.state.temp.filter(item=>item.value.includes(keyword))\n            this.setState({data: arr, path: `search?query=${keyword.toLowerCase()}`, popup: true}, this.getSearchFetch())\n        }\n        else this.setState({data: []})\n    }\n\n    render(){\n        let renderElement = <JokeBox {...this.state} like={this.props.like} getLike={this.props.likeHandler} />\n        if(this.state.popup) renderElement = this.state.data ? this.state.data.slice(0,5).map(item => <JokeBox data = {[item]} like={this.props.like} getLike={this.props.likeHandler} key={item.id} />) : <p>Loading...</p>\n        let search = ''\n        let categories = ''\n        if(this.state.search){\n            search = \n            <div>\n                <input \n                    className={classes.SearchInput} \n                    type='text' placeholder='Free text search...'\n                    onChange={(e)=>this.onSearchInputChange(e)} />\n            </div>\n        }\n        if(this.state.categories){\n            categories = \n            <div className={classes.Btns} onChange={(e)=>this.onInputChangeCategory(e)}>\n                {this.state.category.map((item, index)=>{\n                    return <Category name={item} key={index} />\n                })}\n            </div>\n        }\n        return(\n            <div className={classes.Main}>\n                <div className={classes.Screen}>\n                    <div className={classes.Header}>\n                        <h3>MSI 2020</h3>\n                        <div className={classes.ToggleFavourite}>\n                            <DrawerToggle clicked={this.props.clicked} />\n                            <span>Favourite</span>\n                        </div>\n                    </div>\n                    <h1>Hey!</h1>\n                    <p style={{fontWeight: 'bold'}}>Let's try to find a joke for you:</p>\n                    <div className={classes.Inputs} onChange={(e) => this.onInputChange(e)}>\n                        <div>\n                            <input type='radio' name='site' value='random' id='random' defaultChecked/>\n                            <label className={classes.InputsLabel} htmlFor='random'>Random</label>\n                        </div>\n                        <div>\n                            <input type='radio' name='site' value='categories' id='categories'/>\n                            <label className={classes.InputsLabel} htmlFor='categories'>From categories</label>\n                            {categories}\n                        </div>\n                        <div className={classes.Search}>\n                            <div>\n                                <input type='radio' name='site' value='search' id='search' />\n                                <label className={classes.InputsLabel} htmlFor='search'>Search</label>\n                            </div>\n                            {search}\n                        </div>\n                    </div>\n                    <div className={classes.Buttons}>\n                        <button className={classes.Btn} onClick={this.getJokeHandler}>Get Chuck Joke</button>\n                    </div>\n                    {renderElement}\n                </div>\n                <div className={classes.Favorite}>\n                    <p>Favourite</p>\n                        <Favorite {...this.props} delete={this.props.deleteHandler} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainScreen;","import React, { Component } from 'react';\n\nimport SideDrawer from '../../Components/SideDrawer/SideDrawer';\nimport MainScreen from '../../Containers/MainScreen/MainScreen';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n        temp: [],\n        like: false\n    }\n\n    componentDidMount(){\n        const temp = localStorage.getItem('favorites') || JSON.stringify([])\n        this.setState({temp: JSON.parse(temp)})\n    }\n\n    // ADD/DELETE FAVOURITE JOKE\n\n\n    likeHandler = (id, data) => {\n        if(!this.state.like){\n            this.setState({like: !this.state.like})\n            let items = data\n            items.like = true\n            this.state.temp.push(items)\n            localStorage.setItem('favorites', JSON.stringify(this.state.temp))\n        }else{\n            this.setState({like: !this.state.like})\n            let items = data\n            items.like = false\n            this.setState({temp: items})\n            const temp = this.state.temp.filter(item => item.id !== id)\n            this.setState({temp: temp})\n            localStorage.setItem('favorites', JSON.stringify(temp))\n        }\n    }\n\n    deleteHandler = (id) => {\n        const temp = this.state.temp.filter(item => item.id !== id)\n        this.setState({temp: temp})\n        localStorage.setItem('favorites', JSON.stringify(temp))\n    }\n\n    // SHOW/HIDE SIDEDRAWER\n\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        })\n    }\n\n    render () {\n        return(\n            <>\n                <SideDrawer \n                    open={this.state.showSideDrawer}\n                    delete={this.deleteHandler}\n                    closed={this.sideDrawerClosedHandler}\n                    clicked={this.sideDrawerToggleHandler}\n                    {...this.state} />\n                <main>\n                    <MainScreen \n                        clicked={this.sideDrawerToggleHandler} \n                        likeHandler={this.likeHandler} \n                        deleteHandler={this.deleteHandler}\n                        {...this.state} />\n                </main>\n            </>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\n\nimport Layout from './hoc/Layout/Layout';\n\nclass App extends Component {\n  render(){\n    return (\n      <Layout />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}