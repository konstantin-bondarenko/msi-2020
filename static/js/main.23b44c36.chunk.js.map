{"version":3,"sources":["Containers/MainScreen/MainScreen.module.css","Components/JokeBox/JokeBox.module.css","Components/Favorite/Favorite.module.css","Components/SideDrawer/SideDrawer.module.css","Components/SideDrawer/DrawerToggle/drawerToggle.module.css","UI/Backdrop/Backdrop.module.css","UI/Category/Category.module.css","UI/Backdrop/Backdrop.js","Components/Favorite/Favorite.js","Components/SideDrawer/DrawerToggle/drawerToggle.js","Components/SideDrawer/SideDrawer.js","Components/JokeBox/JokeBox.js","UI/Category/Category.js","Containers/MainScreen/MainScreen.js","Containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backdrop","props","show","className","classes","Backdrop","onClick","clicked","Favorite","temp","map","item","currentTime","Date","jokeTime","updated_at","replace","date","Math","round","getTime","key","id","Heart","delete","FavoriteContent","Icon","FavoriteJoke","Link","href","url","LinkIcon","FJoke","value","Update","drawerToggle","DrawerToggle","Left","Right","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","closed","join","Toggle","JokeBox","heart","data","filter","like","length","push","Liked","Container","getLike","Content","ContainerJoke","Joke","categories","category","Category","type","name","htmlFor","MainScreen","renderElement","this","likeHandler","popup","search","SearchInput","placeholder","onChange","e","onInputChangeSearch","Btns","onInputChangeCategory","index","Main","Screen","Header","ToggleFavourite","style","fontWeight","Inputs","onInputChange","defaultChecked","InputsLabel","Search","Buttons","Btn","getJokeHandler","deleteHandler","Component","Layout","state","showSideDrawer","matchUp","path","setState","getSearchFetch","getFetch","target","query","keyword","arr","includes","forEach","localStorage","setItem","JSON","stringify","setTimeout","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","getCategoriesFetch","getItem","parse","fetch","then","response","json","result","ids","indexOf","fetchData","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23b44c36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"MainScreen_Main__14pCk\",\"Header\":\"MainScreen_Header__2v-0s\",\"ToggleFavourite\":\"MainScreen_ToggleFavourite__2K7zs\",\"Screen\":\"MainScreen_Screen__1Tsj6\",\"Inputs\":\"MainScreen_Inputs__2ZwqL\",\"InputsLabel\":\"MainScreen_InputsLabel__3GRpR\",\"Btn\":\"MainScreen_Btn__3bVbG\",\"Btns\":\"MainScreen_Btns__1BHMm\",\"Search\":\"MainScreen_Search__2k47v\",\"SearchInput\":\"MainScreen_SearchInput__399s4\",\"Buttons\":\"MainScreen_Buttons__1oElP\",\"Favorite\":\"MainScreen_Favorite__dYuwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"JokeBox_Container__2k_2k\",\"Heart\":\"JokeBox_Heart__1dv1n\",\"Liked\":\"JokeBox_Liked__3pErB\",\"LinkIcon\":\"JokeBox_LinkIcon__2nt2J\",\"Icon\":\"JokeBox_Icon__3ZsvK\",\"Content\":\"JokeBox_Content__3Vgi3\",\"ContainerJoke\":\"JokeBox_ContainerJoke__1bhT3\",\"Joke\":\"JokeBox_Joke__3E5bj\",\"Link\":\"JokeBox_Link__bfiJX\",\"Update\":\"JokeBox_Update__3KIHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favorite\":\"Favorite_Favorite__15PcQ\",\"FavoriteContent\":\"Favorite_FavoriteContent__3wPft\",\"FavoriteJoke\":\"Favorite_FavoriteJoke__mxfMC\",\"FJoke\":\"Favorite_FJoke__1PkY-\",\"Heart\":\"Favorite_Heart__3oXQr\",\"Icon\":\"Favorite_Icon__2_0rN\",\"LinkIcon\":\"Favorite_LinkIcon__1u0sa\",\"Link\":\"Favorite_Link__1QWTM\",\"Update\":\"Favorite_Update__2RBNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2tmxU\",\"Toggle\":\"SideDrawer_Toggle__eAIh_\",\"Open\":\"SideDrawer_Open__2vP2M\",\"Closed\":\"SideDrawer_Closed__1Ynug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"drawerToggle_DrawerToggle__2sXb3\",\"Left\":\"drawerToggle_Left__G7yp1\",\"Right\":\"drawerToggle_Right__2034j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__zFzWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"Category_Category__1A_cZ\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport classes from '../Favorite/Favorite.module.css';\n\nconst Favorite = props => {\n    return (<>\n        {props.temp.map(item=>{\n            const currentTime = new Date()\n            const jokeTime = new Date(item.updated_at.replace(/-/g,'/').replace('T',' ').replace(/\\..*|\\+.*/,''))\n            const date = Math.round((currentTime.getTime() - jokeTime.getTime()) / (1000*60*60))\n            return (\n                <div className={classes.Favorite} key={item.id}>\n                    <div className={classes.Heart} onClick={()=>props.delete(item.id, item)}></div>\n                    <div className={classes.FavoriteContent}>\n                        <div className={classes.Icon}></div>\n                        <div className={classes.FavoriteJoke}>\n                            <div className={classes.Link}>ID: <a href={item.url}>{item.id}<div className={classes.LinkIcon}></div></a></div>\n                            <div className={classes.FJoke}>{item.value}</div>\n                            <div className={classes.Update}>\n                            <span>Last update: {date} hours ago</span>\n                            </div>\n                        </div>\n                    </div>\n              </div>\n            )\n        })}\n        </>\n        )\n}\n\nexport default Favorite;","import React from 'react';\n\nimport classes from './drawerToggle.module.css';\n\nconst drawerToggle = (props) => {\n\n    return (<div\n        className={classes.DrawerToggle} \n        onClick={props.clicked}>\n            {props.show ? \n            <>\n            <div className={classes.Left}></div>\n            <div className={classes.Right}></div>\n            </>\n             : \n            <>\n            <div></div>\n            <div></div>\n            </>}\n    </div>)\n}\n\nexport default drawerToggle","import React from 'react';\n\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Favorite from '../Favorite/Favorite';\nimport DrawerToggle from './DrawerToggle/drawerToggle';\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Closed]\n    if(props.open){\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n    return (\n        <>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Toggle}>\n                    <DrawerToggle clicked={props.clicked} show={props.open} />\n                    <span>Favourite</span>\n                </div>\n                <Favorite temp={props.temp} delete={props.delete} />\n            </div>\n        </>\n    )\n}\n\nexport default sideDrawer;","import React from 'react';\n\nimport classes from './JokeBox.module.css';\n\nconst JokeBox = (props) =>{\n    const heart = [classes.Heart]\n    let obj = props.data.filter(item => item.like)\n    if(obj.length){\n        heart.push(classes.Liked)\n    }\n\n    return (<>\n    {props.data.map(item => {\n        const currentTime = new Date()\n        const jokeTime = new Date(item.updated_at.replace(/-/g,'/').replace('T',' ').replace(/\\..*|\\+.*/,''))\n        const date = Math.round((currentTime.getTime() - jokeTime.getTime()) / (1000*60*60))\n        return (\n            <div className={classes.Container} key={item.id}>\n                <div className={heart.join(' ')} onClick={()=>props.getLike(item.id, item)}></div>\n                <div className={classes.Content}>\n                    <div className={classes.Icon}></div>\n                    <div className={classes.ContainerJoke}>\n                        <div className={classes.Link}>ID: <a href={item.url}>{item.id}<div className={classes.LinkIcon}></div></a></div>\n                        <div className={classes.Joke}>{item.value}</div>\n                        <div className={classes.Update}>\n                            <span>Last update: {date} hours ago</span>\n                            <button>{item.categories.length ? item.categories : 'random'}</button>                            </div>\n                    </div>\n                </div>\n            </div>\n            )\n        })\n        }\n    </>\n    )\n}\n\nexport default JokeBox;\n","import React from 'react';\n\nimport classes from './Category.module.css';\n\nconst category = (props) => {\n    return (\n        <div className={classes.Category}>\n            <input type=\"radio\" id={props.name} name=\"categories\" value={props.name} />\n            <label htmlFor={props.name}>{props.name}</label>\n        </div>\n    )\n}\n\nexport default category;","import React, { Component } from 'react';\n\nimport JokeBox from '../../Components/JokeBox/JokeBox';\nimport Favorite from '../../Components/Favorite/Favorite';\nimport DrawerToggle from '../../Components/SideDrawer/DrawerToggle/drawerToggle';\nimport Category from '../../UI/Category/Category';\nimport classes from './MainScreen.module.css';\n\n\nclass MainScreen extends Component {\n    render(){\n        let renderElement = <JokeBox data={this.props.data} like={this.props.like} getLike={this.props.likeHandler} />\n        if(this.props.popup){\n            renderElement = this.props.data ? \n            this.props.data.map(item => <JokeBox data = {[item]} like={this.props.like} getLike={this.props.likeHandler} key={item.id} />) \n            : <p>Loading...</p>\n        }\n        let search = ''\n        let categories = ''\n        if(this.props.search){\n            search = \n            <div>\n                <input \n                    className={classes.SearchInput} \n                    type='text' placeholder='Free text search...'\n                    onChange={(e)=>this.props.onInputChangeSearch(e)} />\n            </div>\n        }\n        if(this.props.categories){\n            categories = \n            <div className={classes.Btns} onChange={(e)=>this.props.onInputChangeCategory(e)}>\n                {this.props.category.map((item, index)=>{\n                    return <Category name={item} key={index} />\n                })}\n            </div>\n        }\n        return(\n            <div className={classes.Main}>\n                <div className={classes.Screen}>\n                    <div className={classes.Header}>\n                        <h3>MSI 2020</h3>\n                        <div className={classes.ToggleFavourite}>\n                            <DrawerToggle clicked={this.props.clicked} />\n                            <span>Favourite</span>\n                        </div>\n                    </div>\n                    <h1>Hey!</h1>\n                    <p style={{fontWeight: 'bold'}}>Let's try to find a joke for you:</p>\n                    <div className={classes.Inputs} onChange={(e) => this.props.onInputChange(e)}>\n                        <div>\n                            <input type='radio' name='site' value='random' id='random' defaultChecked/>\n                            <label className={classes.InputsLabel} htmlFor='random'>Random</label>\n                        </div>\n                        <div>\n                            <input type='radio' name='site' value='categories' id='categories'/>\n                            <label className={classes.InputsLabel} htmlFor='categories'>From categories</label>\n                            {categories}\n                        </div>\n                        <div className={classes.Search}>\n                            <div>\n                                <input type='radio' name='site' value='search' id='search' />\n                                <label className={classes.InputsLabel} htmlFor='search'>Search</label>\n                            </div>\n                            {search}\n                        </div>\n                    </div>\n                    <div className={classes.Buttons}>\n                        <button className={classes.Btn} onClick={this.props.getJokeHandler}>Get Chuck Joke</button>\n                    </div>\n                    {renderElement}\n                </div>\n                <div className={classes.Favorite}>\n                    <p>Favourite</p>\n                        <Favorite {...this.props} delete={this.props.deleteHandler} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainScreen;","import React, { Component } from 'react';\n\nimport SideDrawer from '../../Components/SideDrawer/SideDrawer';\nimport MainScreen from '../MainScreen/MainScreen';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false,\n        data: [],\n        temp: [],\n        category: [],\n        matchUp: [],\n        url: 'https://api.chucknorris.io/jokes/',\n        path: 'random',\n        search: false,\n        categories: false,\n        popup: false,\n        like: false,\n    }\n\n    componentDidMount(){\n        this.getFetch()\n        this.getCategoriesFetch()\n        const temp = localStorage.getItem('favorites') || JSON.stringify([])\n        this.setState({temp: JSON.parse(temp)})\n    }\n\n    // FETCHING DATA\n\n    getFetch(){\n        fetch(this.state.url + this.state.path)\n        .then(response => response.json())\n        .then(result => {\n            const ids = []\n            this.state.temp.forEach(item => ids.push(item.id))\n            if(ids.indexOf(result.id) === -1){\n                this.setState({\n                data: [{...result, like: false}],\n                like: false\n                })\n            }else {\n                this.state.temp.map(item => {\n                    return this.setState({\n                        data: [{...item}]\n                        })\n                })\n            }\n        })\n    }\n\n    getCategoriesFetch(){\n        fetch(this.state.url + 'categories')\n        .then(response => response.json())\n        .then(response => {\n            return this.setState({category: response})})\n    }\n\n    getSearchFetch(){\n        fetch(this.state.url + this.state.path)\n            .then(response => response.json())\n            .then(response => {\n                const fetchData = this.state.matchUp\n                const ids = []\n                this.state.temp.map(item => ids.push(item.id))\n                for(let key in response.result){\n                    if(ids.indexOf(response.result[key].id) === -1 && fetchData.length < 10){\n                        fetchData.push({\n                            ...response.result[key],\n                            like: false\n                        })\n                    }\n                }\n                this.setState({data: fetchData, like: false})\n            })\n    }\n\n    // FETCHING DATA BUTTON\n\n    getJokeHandler = () => {\n        if(this.state.search) this.setState({data: []}, this.getSearchFetch())\n        else this.getFetch()\n    }\n\n    // CHOOSE CATEGORIES OF JOKE\n\n    onInputChange = (e) => {\n        switch(e.target.value){\n            case('random'):\n                return this.setState({ path: e.target.value, search: false, categories: false})\n            case('categories'):\n                return this.setState({ categories: true, search: false})\n            case('search'):\n                return this.setState({ search: true, categories: false})\n            default: \n                return this.state.path\n        }\n    }\n\n    onInputChangeCategory = (e) => {\n        let query = e.target.value;\n        return this.setState({ path: `random?category=${query}`})\n    }\n\n    onInputChangeSearch = (e) => {\n        const keyword = e.target.value\n        if (keyword.length >= 3 && this.state.search){\n            const arr = this.state.temp.filter(item=>item.value.includes(keyword))\n            this.setState({matchUp: arr, path: `search?query=${keyword}`, popup: true}, this.getSearchFetch())\n        }\n        else {this.setState({data: [], popup: false})}\n    }\n\n\n    // ADD/DELETE FAVOURITE JOKE\n\n\n    likeHandler = (id, data) => {\n        this.state.data.forEach(item => {\n            if(item.id === id){\n                if(item.like){\n                    data.like = false\n                    this.setState({temp: data})\n                    const temp = this.state.temp.filter(item => item.id !== id)\n                    this.setState({temp: temp, like: !this.state.like})\n                    localStorage.setItem('favorites', JSON.stringify(temp))\n                }else{\n                    this.setState({like: !this.state.like})\n                    setTimeout(()=>{\n                        this.setState({like: !this.state.like})\n                    }, 500)\n                    data.like = true\n                    this.state.temp.push(data)\n                    localStorage.setItem('favorites', JSON.stringify(this.state.temp))\n                }\n            }\n        })\n    }\n\n    deleteHandler = (id, data) => {\n        data.like = false\n        this.setState({temp: data})\n        const temp = this.state.temp.filter(item => item.id !== id)\n        this.setState({temp: temp})\n        localStorage.setItem('favorites', JSON.stringify(temp))\n    }\n\n    // SHOW/HIDE SIDEDRAWER\n\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        })\n    }\n\n    render () {\n        return(\n            <>\n                <SideDrawer \n                    open={this.state.showSideDrawer}\n                    delete={this.deleteHandler}\n                    closed={this.sideDrawerClosedHandler}\n                    clicked={this.sideDrawerToggleHandler}\n                    {...this.state} />\n                <main>\n                    <MainScreen \n                        onInputChangeSearch={this.onInputChangeSearch}\n                        onInputChangeCategory={this.onInputChangeCategory}\n                        onInputChange={this.onInputChange}\n                        getJokeHandler={this.getJokeHandler}\n                        clicked={this.sideDrawerToggleHandler} \n                        likeHandler={this.likeHandler} \n                        deleteHandler={this.deleteHandler}\n                        {...this.state} />\n                </main>\n            </>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\n\nimport Layout from './Containers/Layout/Layout';\n\nclass App extends Component {\n  render(){\n    return (\n      <Layout />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}